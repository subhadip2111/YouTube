{"ast":null,"code":"import _slicedToArray from\"C:/Users/subhadip/OneDrive/Desktop/my-youtube/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// import React, { useEffect, useState } from 'react'\n// import ChatMessage from './ChatMessage'\n// import { useDispatch, useSelector } from 'react-redux'\n// import { addMessage } from '../utils/chatSlice'\n// import { generateRandomName, makeRandomMessage } from '../utils/helper'\n// export const LiveChat = () => {\n// const [liveMessage, setLiveMessage] = useState(\"\");\n// const chatMessages=useSelector(store=>store.chat.messages)\n//     const dispatch=useDispatch()\n//          useEffect(() => {\n//            const i=  setInterval(() => {\n//               //Api poling\n//                //console.log(\"api poling\")\n//                dispatch(addMessage({name:generateRandomName(),  message: makeRandomMessage(40) + \" ðŸš€\",}))\n//            },2000)\n//              return ()=> clearInterval(i)\n//  },[])\n//   return (\n//        <>\n//       <div className=\"w-full h-[600px] ml-2 p-2 border border-red-950 bg-red-300 rounded-lg overflow-y-scroll flex flex-col-reverse\">\n//         <div>  {\n// //             // Disclaimer: Don't use indexes as keys\n//              chatMessages.map((c, i) => (\n//                <ChatMessage key={i} name={c.name} message={c.message} />\n//             ))\n//               }\n// </div>\n//       </div>\n//      <form\n//          className=\"w-full p-2 ml-2 border border-black\"\n//          onSubmit={(e) => {\n//            e.preventDefault();\n//            dispatch(\n//              addMessage({\n//                name: \"Subhadip\",\n//                message: liveMessage,\n//              })\n//            );\n//            setLiveMessage(\"\");\n//          }}\n//        >\n//          <input\n//            className=\"px-2 w-96\"\n//            type=\"text\"\n//            value={liveMessage}\n//            onChange={(e) => {\n//              setLiveMessage(e.target.value);\n//            }}\n//          />\n//          <button className=\"px-2 mx-2 bg-green-400\">Send</button>\n//        </form>\n//     </>\n//   )\n// }\nimport React,{useEffect,useState}from'react';import{useDispatch,useSelector}from'react-redux';import{addMessage}from'../utils/chatSlice';import{generateRandomName,makeRandomMessage}from'../utils/helper';import ChatMessage from'./ChatMessage';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var LiveChat=function LiveChat(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),liveMessage=_useState2[0],setLiveMessage=_useState2[1];var chatMessages=useSelector(function(store){return store.chat.messages;});var dispatch=useDispatch();useEffect(function(){var interval=setInterval(function(){dispatch(addMessage({name:generateRandomName(),message:makeRandomMessage(40)+\" ðŸš€\"}));},2000);return function(){return clearInterval(interval);};},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col h-[600px] bg-gradient-to-r from-blue-400 to-purple-500 rounded-lg p-4 overflow-hidden shadow-lg\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-grow overflow-y-scroll\",children:chatMessages.map(function(c,index){return/*#__PURE__*/_jsx(ChatMessage,{name:c.name,message:c.message},index);})}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:function onSubmit(e){e.preventDefault();dispatch(addMessage({name:\"Subhadip\",message:liveMessage}));setLiveMessage(\"\");},className:\"flex items-center mt-4\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"flex-grow px-3 py-2 rounded-l-lg border border-gray-300 focus:outline-none\",type:\"text\",placeholder:\"Type your message...\",value:liveMessage,onChange:function onChange(e){setLiveMessage(e.target.value);}}),/*#__PURE__*/_jsx(\"button\",{className:\"bg-blue-600 text-white px-4 py-2 rounded-r-lg hover:bg-blue-700 transition focus:outline-none\",type:\"submit\",children:\"Send\"})]})]});};// default LiveChat;","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","addMessage","generateRandomName","makeRandomMessage","ChatMessage","jsx","_jsx","jsxs","_jsxs","LiveChat","_useState","_useState2","_slicedToArray","liveMessage","setLiveMessage","chatMessages","store","chat","messages","dispatch","interval","setInterval","name","message","clearInterval","className","children","map","c","index","onSubmit","e","preventDefault","type","placeholder","value","onChange","target"],"sources":["C:/Users/subhadip/OneDrive/Desktop/my-youtube/src/component/LiveChat.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react'\r\n// import ChatMessage from './ChatMessage'\r\n// import { useDispatch, useSelector } from 'react-redux'\r\n// import { addMessage } from '../utils/chatSlice'\r\n// import { generateRandomName, makeRandomMessage } from '../utils/helper'\r\n\r\n\r\n\r\n\r\n\r\n// export const LiveChat = () => {\r\n// const [liveMessage, setLiveMessage] = useState(\"\");\r\n// const chatMessages=useSelector(store=>store.chat.messages)\r\n\r\n//     const dispatch=useDispatch()\r\n//          useEffect(() => {\r\n     \r\n//            const i=  setInterval(() => {\r\n//               //Api poling\r\n//                //console.log(\"api poling\")\r\n               \r\n//                dispatch(addMessage({name:generateRandomName(),  message: makeRandomMessage(40) + \" ðŸš€\",}))\r\n               \r\n//            },2000)\r\n             \r\n             \r\n//              return ()=> clearInterval(i)\r\n//  },[])\r\n//   return (\r\n \r\n      \r\n//        <>\r\n//       <div className=\"w-full h-[600px] ml-2 p-2 border border-red-950 bg-red-300 rounded-lg overflow-y-scroll flex flex-col-reverse\">\r\n   \r\n      \r\n             \r\n//         <div>  {\r\n// //             // Disclaimer: Don't use indexes as keys\r\n//              chatMessages.map((c, i) => (\r\n//                <ChatMessage key={i} name={c.name} message={c.message} />\r\n//             ))\r\n//               }\r\n              \r\n// </div>\r\n            \r\n\r\n\r\n//       </div>\r\n\r\n//      <form\r\n//          className=\"w-full p-2 ml-2 border border-black\"\r\n//          onSubmit={(e) => {\r\n//            e.preventDefault();\r\n\r\n//            dispatch(\r\n//              addMessage({\r\n//                name: \"Subhadip\",\r\n//                message: liveMessage,\r\n//              })\r\n//            );\r\n//            setLiveMessage(\"\");\r\n//          }}\r\n//        >\r\n//          <input\r\n//            className=\"px-2 w-96\"\r\n//            type=\"text\"\r\n//            value={liveMessage}\r\n//            onChange={(e) => {\r\n//              setLiveMessage(e.target.value);\r\n//            }}\r\n//          />\r\n//          <button className=\"px-2 mx-2 bg-green-400\">Send</button>\r\n//        </form>\r\n//     </>\r\n//   )\r\n// }\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addMessage } from '../utils/chatSlice';\r\nimport { generateRandomName, makeRandomMessage } from '../utils/helper';\r\nimport ChatMessage from './ChatMessage';\r\n\r\nexport const LiveChat = () => {\r\n  const [liveMessage, setLiveMessage] = useState(\"\");\r\n  const chatMessages = useSelector((store) => store.chat.messages);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      dispatch(\r\n        addMessage({\r\n          name: generateRandomName(),\r\n          message: makeRandomMessage(40) + \" ðŸš€\",\r\n        })\r\n      );\r\n    }, 2000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-[600px] bg-gradient-to-r from-blue-400 to-purple-500 rounded-lg p-4 overflow-hidden shadow-lg\">\r\n      <div className=\"flex-grow overflow-y-scroll\">\r\n        {chatMessages.map((c, index) => (\r\n          <ChatMessage key={index} name={c.name} message={c.message} />\r\n        ))}\r\n      </div>\r\n\r\n      <form\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          dispatch(addMessage({ name: \"Subhadip\", message: liveMessage }));\r\n          setLiveMessage(\"\");\r\n        }}\r\n        className=\"flex items-center mt-4\"\r\n      >\r\n        <input\r\n          className=\"flex-grow px-3 py-2 rounded-l-lg border border-gray-300 focus:outline-none\"\r\n          type=\"text\"\r\n          placeholder=\"Type your message...\"\r\n          value={liveMessage}\r\n          onChange={(e) => {\r\n            setLiveMessage(e.target.value);\r\n          }}\r\n        />\r\n        <button\r\n          className=\"bg-blue-600 text-white px-4 py-2 rounded-r-lg hover:bg-blue-700 transition focus:outline-none\"\r\n          type=\"submit\"\r\n        >\r\n          Send\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\n// default LiveChat;\r\n"],"mappings":"mIAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAGA;AACA;AACA;AAGA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD,OAASC,UAAU,KAAQ,oBAAoB,CAC/C,OAASC,kBAAkB,CAAEC,iBAAiB,KAAQ,iBAAiB,CACvE,MAAO,CAAAC,WAAW,KAAM,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAExC,MAAO,IAAM,CAAAC,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAA,CAAS,CAC5B,IAAAC,SAAA,CAAsCZ,QAAQ,CAAC,EAAE,CAAC,CAAAa,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA3CG,WAAW,CAAAF,UAAA,IAAEG,cAAc,CAAAH,UAAA,IAClC,GAAM,CAAAI,YAAY,CAAGf,WAAW,CAAC,SAACgB,KAAK,QAAK,CAAAA,KAAK,CAACC,IAAI,CAACC,QAAQ,GAAC,CAChE,GAAM,CAAAC,QAAQ,CAAGpB,WAAW,CAAC,CAAC,CAE9BF,SAAS,CAAC,UAAM,CACd,GAAM,CAAAuB,QAAQ,CAAGC,WAAW,CAAC,UAAM,CACjCF,QAAQ,CACNlB,UAAU,CAAC,CACTqB,IAAI,CAAEpB,kBAAkB,CAAC,CAAC,CAC1BqB,OAAO,CAAEpB,iBAAiB,CAAC,EAAE,CAAC,CAAG,KACnC,CAAC,CACH,CAAC,CACH,CAAC,CAAE,IAAI,CAAC,CAER,MAAO,kBAAM,CAAAqB,aAAa,CAACJ,QAAQ,CAAC,GACtC,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEZ,KAAA,QAAKiB,SAAS,CAAC,+GAA+G,CAAAC,QAAA,eAC5HpB,IAAA,QAAKmB,SAAS,CAAC,6BAA6B,CAAAC,QAAA,CACzCX,YAAY,CAACY,GAAG,CAAC,SAACC,CAAC,CAAEC,KAAK,qBACzBvB,IAAA,CAACF,WAAW,EAAakB,IAAI,CAAEM,CAAC,CAACN,IAAK,CAACC,OAAO,CAAEK,CAAC,CAACL,OAAQ,EAAxCM,KAA0C,CAAC,EAC9D,CAAC,CACC,CAAC,cAENrB,KAAA,SACEsB,QAAQ,CAAE,SAAAA,SAACC,CAAC,CAAK,CACfA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClBb,QAAQ,CAAClB,UAAU,CAAC,CAAEqB,IAAI,CAAE,UAAU,CAAEC,OAAO,CAAEV,WAAY,CAAC,CAAC,CAAC,CAChEC,cAAc,CAAC,EAAE,CAAC,CACpB,CAAE,CACFW,SAAS,CAAC,wBAAwB,CAAAC,QAAA,eAElCpB,IAAA,UACEmB,SAAS,CAAC,4EAA4E,CACtFQ,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,sBAAsB,CAClCC,KAAK,CAAEtB,WAAY,CACnBuB,QAAQ,CAAE,SAAAA,SAACL,CAAC,CAAK,CACfjB,cAAc,CAACiB,CAAC,CAACM,MAAM,CAACF,KAAK,CAAC,CAChC,CAAE,CACH,CAAC,cACF7B,IAAA,WACEmB,SAAS,CAAC,+FAA+F,CACzGQ,IAAI,CAAC,QAAQ,CAAAP,QAAA,CACd,MAED,CAAQ,CAAC,EACL,CAAC,EACJ,CAAC,CAEV,CAAC,CAED"},"metadata":{},"sourceType":"module","externalDependencies":[]}
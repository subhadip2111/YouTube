{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";var searchSlice=createSlice({name:\"search\",initialState:{},reducers:{cacheResults:function cacheResults(state,action){//for some reason  ... distructure was not working \nstate=Object.assign(state,action.payload);}}});var cacheResults=searchSlice.actions.cacheResults;export{cacheResults};export default searchSlice.reducer;/**\r\n * define Our cache\r\n * [\r\n * \r\n * \r\n * \r\n * ]\r\n * \r\n * here i am not doing [] for initial \r\n * \r\n * \r\n * \r\n*/","map":{"version":3,"names":["createSlice","searchSlice","name","initialState","reducers","cacheResults","state","action","Object","assign","payload","actions","reducer"],"sources":["C:/Users/subhadip/OneDrive/Desktop/my-youtube/src/utils/searchSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst searchSlice = createSlice({\r\n    name: \"search\",\r\n    initialState: {\r\n        \r\n    },\r\n    reducers: {\r\n        cacheResults: (state, action) => {\r\n            //for some reason  ... distructure was not working \r\n            state = Object.assign(state,action.payload)\r\n        }\r\n    }\r\n})\r\nexport const {cacheResults}=searchSlice.actions\r\n\r\nexport default searchSlice.reducer\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * define Our cache\r\n * [\r\n * \r\n * \r\n * \r\n * ]\r\n * \r\n * here i am not doing [] for initial \r\n * \r\n * \r\n * \r\n*/"],"mappings":"AAAA,OAASA,WAAW,KAAQ,kBAAkB,CAE9C,GAAM,CAAAC,WAAW,CAAGD,WAAW,CAAC,CAC5BE,IAAI,CAAE,QAAQ,CACdC,YAAY,CAAE,CAEd,CAAC,CACDC,QAAQ,CAAE,CACNC,YAAY,CAAE,SAAAA,aAACC,KAAK,CAAEC,MAAM,CAAK,CAC7B;AACAD,KAAK,CAAGE,MAAM,CAACC,MAAM,CAACH,KAAK,CAACC,MAAM,CAACG,OAAO,CAAC,CAC/C,CACJ,CACJ,CAAC,CAAC,CACK,GAAO,CAAAL,YAAY,CAAEJ,WAAW,CAACU,OAAO,CAAjCN,YAAY,CAAqB,OAAAA,YAAA,EAE/C,cAAe,CAAAJ,WAAW,CAACW,OAAO,CAMlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\subhadip\\\\OneDrive\\\\Desktop\\\\my-youtube\\\\src\\\\component\\\\LiveChat.js\";\nimport React from 'react';\nimport ChatMessage from './ChatMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const LiveChat = () => {\n  return (\n    /*#__PURE__*/\n    //   <div className='w-full h-[600px] ml-2 p-2 border border-black bg-slate-100 rounded-lg overflow-y-scroll flex flex-col-reverse'>LiveChat\n    //   <ChatMessage  name=\"subhadip\" message=\"hello this is an demo for live chat\" />\n    //   </div>\n    _jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full h-[600px] ml-2 p-2 border border-black bg-slate-100 rounded-lg overflow-y-scroll flex flex-col-reverse\",\n        children: [/*#__PURE__*/_jsxDEV(ChatMessage, {\n          name: \"subhadip\",\n          message: \"hello this is an demo for live chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ChatMessage, {\n          name: \"subhadip\",\n          message: \"hello this is an demo for live chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ChatMessage, {\n          name: \"subhadip\",\n          message: \"hello this is an demo for live chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this), \" \", /*#__PURE__*/_jsxDEV(ChatMessage, {\n          name: \"subhadip\",\n          message: \"hello this is an demo for live chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 93\n        }, this), \" \", /*#__PURE__*/_jsxDEV(ChatMessage, {\n          name: \"subhadip\",\n          message: \"hello this is an demo for live chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 171\n        }, this), /*#__PURE__*/_jsxDEV(ChatMessage, {\n          name: \"subhadip\",\n          message: \"hello this is an demo for live chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this)\n    }, void 0, false)\n  );\n};\n\n////import { useEffect, useState } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { addMessage } from \"../utils/chatSlice\";\n// import { generateRandomName, makeRandomMessage } from \"../utils/helper\";\n// import ChatMessage from \"./ChatMessage\";\n\n// const LiveChat = () => {\n//   const [liveMessage, setLiveMessage] = useState(\"\");\n//   const dispatch = useDispatch();\n\n//   const chatMessages = useSelector((store) => store.chat.messages);\n\n//   useEffect(() => {\n//     const i = setInterval(() => {\n//       // API Polling\n\n//       dispatch(\n//         addMessage({\n//           name: generateRandomName(),\n//           message: makeRandomMessage(20) + \" ðŸš€\",\n//         })\n//       );\n//     }, 2000);\n\n//     return () => clearInterval(i);\n//   }, []);\n\n//   return (\n//     <>\n//       <div className=\"w-full h-[600px] ml-2 p-2 border border-black bg-slate-100 rounded-lg overflow-y-scroll flex flex-col-reverse\">\n//         <div>\n//           {\n//             // Disclaimer: Don't use indexes as keys\n//             chatMessages.map((c, i) => (\n//               <ChatMessage key={i} name={c.name} message={c.message} />\n//             ))\n//           }\n//         </div>\n//       </div>\n\n//       <form\n//         className=\"w-full p-2 ml-2 border border-black\"\n//         onSubmit={(e) => {\n//           e.preventDefault();\n\n//           dispatch(\n//             addMessage({\n//               name: \"Akshay Saini\",\n//               message: liveMessage,\n//             })\n//           );\n//           setLiveMessage(\"\");\n//         }}\n//       >\n//         <input\n//           className=\"px-2 w-96\"\n//           type=\"text\"\n//           value={liveMessage}\n//           onChange={(e) => {\n//             setLiveMessage(e.target.value);\n//           }}\n//         />\n//         <button className=\"px-2 mx-2 bg-green-100\">Send</button>\n//       </form>\n//     </>\n//   );\n// };\n// export default LiveChat;\n_c = LiveChat;\nvar _c;\n$RefreshReg$(_c, \"LiveChat\");","map":{"version":3,"names":["React","ChatMessage","jsxDEV","_jsxDEV","Fragment","_Fragment","LiveChat","children","className","name","message","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/subhadip/OneDrive/Desktop/my-youtube/src/component/LiveChat.js"],"sourcesContent":["import React from 'react'\r\nimport ChatMessage from './ChatMessage'\r\n\r\n\r\n\r\n\r\n\r\nexport const LiveChat = () => {\r\n  return (\r\n    //   <div className='w-full h-[600px] ml-2 p-2 border border-black bg-slate-100 rounded-lg overflow-y-scroll flex flex-col-reverse'>LiveChat\r\n      \r\n    //   <ChatMessage  name=\"subhadip\" message=\"hello this is an demo for live chat\" />\r\n      \r\n      \r\n    //   </div>\r\n      \r\n      \r\n      \r\n       <>\r\n      <div className=\"w-full h-[600px] ml-2 p-2 border border-black bg-slate-100 rounded-lg overflow-y-scroll flex flex-col-reverse\">\r\n   \r\n      \r\n              <ChatMessage name=\"subhadip\" message=\"hello this is an demo for live chat\" />\r\n              <ChatMessage name=\"subhadip\" message=\"hello this is an demo for live chat\" />\r\n              <ChatMessage name=\"subhadip\" message=\"hello this is an demo for live chat\" /> <ChatMessage name=\"subhadip\" message=\"hello this is an demo for live chat\" /> <ChatMessage name=\"subhadip\" message=\"hello this is an demo for live chat\" />\r\n              <ChatMessage name=\"subhadip\" message=\"hello this is an demo for live chat\" />\r\n   \r\n      </div>\r\n\r\n    \r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\n////import { useEffect, useState } from \"react\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { addMessage } from \"../utils/chatSlice\";\r\n// import { generateRandomName, makeRandomMessage } from \"../utils/helper\";\r\n// import ChatMessage from \"./ChatMessage\";\r\n\r\n// const LiveChat = () => {\r\n//   const [liveMessage, setLiveMessage] = useState(\"\");\r\n//   const dispatch = useDispatch();\r\n\r\n//   const chatMessages = useSelector((store) => store.chat.messages);\r\n\r\n//   useEffect(() => {\r\n//     const i = setInterval(() => {\r\n//       // API Polling\r\n\r\n//       dispatch(\r\n//         addMessage({\r\n//           name: generateRandomName(),\r\n//           message: makeRandomMessage(20) + \" ðŸš€\",\r\n//         })\r\n//       );\r\n//     }, 2000);\r\n\r\n//     return () => clearInterval(i);\r\n//   }, []);\r\n\r\n//   return (\r\n//     <>\r\n//       <div className=\"w-full h-[600px] ml-2 p-2 border border-black bg-slate-100 rounded-lg overflow-y-scroll flex flex-col-reverse\">\r\n//         <div>\r\n//           {\r\n//             // Disclaimer: Don't use indexes as keys\r\n//             chatMessages.map((c, i) => (\r\n//               <ChatMessage key={i} name={c.name} message={c.message} />\r\n//             ))\r\n//           }\r\n//         </div>\r\n//       </div>\r\n\r\n//       <form\r\n//         className=\"w-full p-2 ml-2 border border-black\"\r\n//         onSubmit={(e) => {\r\n//           e.preventDefault();\r\n\r\n//           dispatch(\r\n//             addMessage({\r\n//               name: \"Akshay Saini\",\r\n//               message: liveMessage,\r\n//             })\r\n//           );\r\n//           setLiveMessage(\"\");\r\n//         }}\r\n//       >\r\n//         <input\r\n//           className=\"px-2 w-96\"\r\n//           type=\"text\"\r\n//           value={liveMessage}\r\n//           onChange={(e) => {\r\n//             setLiveMessage(e.target.value);\r\n//           }}\r\n//         />\r\n//         <button className=\"px-2 mx-2 bg-green-100\">Send</button>\r\n//       </form>\r\n//     </>\r\n//   );\r\n// };\r\n// export default LiveChat;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAMvC,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAC5B;IAAA;IACE;IAEA;IAGA;IAIGH,OAAA,CAAAE,SAAA;MAAAE,QAAA,eACDJ,OAAA;QAAKK,SAAS,EAAC,+GAA+G;QAAAD,QAAA,gBAGtHJ,OAAA,CAACF,WAAW;UAACQ,IAAI,EAAC,UAAU;UAACC,OAAO,EAAC;QAAqC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC7EX,OAAA,CAACF,WAAW;UAACQ,IAAI,EAAC,UAAU;UAACC,OAAO,EAAC;QAAqC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC7EX,OAAA,CAACF,WAAW;UAACQ,IAAI,EAAC,UAAU;UAACC,OAAO,EAAC;QAAqC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,KAAC,eAAAX,OAAA,CAACF,WAAW;UAACQ,IAAI,EAAC,UAAU;UAACC,OAAO,EAAC;QAAqC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,KAAC,eAAAX,OAAA,CAACF,WAAW;UAACQ,IAAI,EAAC,UAAU;UAACC,OAAO,EAAC;QAAqC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACzOX,OAAA,CAACF,WAAW;UAACQ,IAAI,EAAC,UAAU;UAACC,OAAO,EAAC;QAAqC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhF;IAAC,gBAGN;EAAC;AAEP,CAAC;;AAID;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAC,EAAA,GAhGaT,QAAQ;AAAA,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
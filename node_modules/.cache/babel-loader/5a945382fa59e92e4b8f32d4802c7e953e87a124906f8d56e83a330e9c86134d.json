{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\subhadip\\\\OneDrive\\\\Desktop\\\\my-youtube\\\\src\\\\component\\\\LiveChat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport ChatMessage from './ChatMessage';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addMessage } from '../utils/chatSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const LiveChat = () => {\n  _s();\n  const chatMessages = useSelector(store);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const i = setInterval(() => {\n      //Api poling\n      console.log(\"api poling\");\n      dispatch(addMessage({\n        name: \"dollae\",\n        message: \"nhfwbf\"\n      }));\n    }, 2000);\n    return () => clearInterval(i);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full h-[600px] ml-2 p-2 border border-black bg-slate-100 rounded-lg overflow-y-scroll flex flex-col-reverse\",\n      children: /*#__PURE__*/_jsxDEV(ChatMessage, {\n        name: \"subhadip\",\n        message: \"hello this is an demo for live chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n////import { useEffect, useState } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { addMessage } from \"../utils/chatSlice\";\n// import { generateRandomName, makeRandomMessage } from \"../utils/helper\";\n// import ChatMessage from \"./ChatMessage\";\n\n// const LiveChat = () => {\n//   const [liveMessage, setLiveMessage] = useState(\"\");\n//   const dispatch = useDispatch();\n\n//   const chatMessages = useSelector((store) => store.chat.messages);\n\n//   useEffect(() => {\n//     const i = setInterval(() => {\n//       // API Polling\n\n//       dispatch(\n//         addMessage({\n//           name: generateRandomName(),\n//           message: makeRandomMessage(20) + \" ðŸš€\",\n//         })\n//       );\n//     }, 2000);\n\n//     return () => clearInterval(i);\n//   }, []);\n\n//   return (\n//     <>\n//       <div className=\"w-full h-[600px] ml-2 p-2 border border-black bg-slate-100 rounded-lg overflow-y-scroll flex flex-col-reverse\">\n//         <div>\n//           {\n//             // Disclaimer: Don't use indexes as keys\n//             chatMessages.map((c, i) => (\n//               <ChatMessage key={i} name={c.name} message={c.message} />\n//             ))\n//           }\n//         </div>\n//       </div>\n\n//       <form\n//         className=\"w-full p-2 ml-2 border border-black\"\n//         onSubmit={(e) => {\n//           e.preventDefault();\n\n//           dispatch(\n//             addMessage({\n//               name: \"Akshay Saini\",\n//               message: liveMessage,\n//             })\n//           );\n//           setLiveMessage(\"\");\n//         }}\n//       >\n//         <input\n//           className=\"px-2 w-96\"\n//           type=\"text\"\n//           value={liveMessage}\n//           onChange={(e) => {\n//             setLiveMessage(e.target.value);\n//           }}\n//         />\n//         <button className=\"px-2 mx-2 bg-green-100\">Send</button>\n//       </form>\n//     </>\n//   );\n// };\n// export default LiveChat;\n_s(LiveChat, \"egFpjz4ABclt6qwQaENOtZxYw7U=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = LiveChat;\nvar _c;\n$RefreshReg$(_c, \"LiveChat\");","map":{"version":3,"names":["React","useEffect","ChatMessage","useDispatch","useSelector","addMessage","jsxDEV","_jsxDEV","Fragment","_Fragment","LiveChat","_s","chatMessages","store","dispatch","i","setInterval","console","log","name","message","clearInterval","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/subhadip/OneDrive/Desktop/my-youtube/src/component/LiveChat.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport ChatMessage from './ChatMessage'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addMessage } from '../utils/chatSlice'\r\n\r\n\r\n\r\n\r\n\r\nexport const LiveChat = () => {\r\n\r\nconst chatMessages=useSelector(store)\r\n\r\n    const dispatch=useDispatch()\r\n         useEffect(() => {\r\n     \r\n           const i=  setInterval(() => {\r\n              //Api poling\r\n               console.log(\"api poling\")\r\n               \r\n               dispatch(addMessage({name:\"dollae\",message:\"nhfwbf\"}))\r\n               \r\n           }, 2000)\r\n             \r\n             \r\n             return ()=> clearInterval(i)\r\n },[])\r\n  return (\r\n \r\n      \r\n       <>\r\n      <div className=\"w-full h-[600px] ml-2 p-2 border border-black bg-slate-100 rounded-lg overflow-y-scroll flex flex-col-reverse\">\r\n   \r\n      \r\n              <ChatMessage name=\"subhadip\" message=\"hello this is an demo for live chat\" />\r\n             \r\n      </div>\r\n\r\n    \r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\n////import { useEffect, useState } from \"react\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { addMessage } from \"../utils/chatSlice\";\r\n// import { generateRandomName, makeRandomMessage } from \"../utils/helper\";\r\n// import ChatMessage from \"./ChatMessage\";\r\n\r\n// const LiveChat = () => {\r\n//   const [liveMessage, setLiveMessage] = useState(\"\");\r\n//   const dispatch = useDispatch();\r\n\r\n//   const chatMessages = useSelector((store) => store.chat.messages);\r\n\r\n//   useEffect(() => {\r\n//     const i = setInterval(() => {\r\n//       // API Polling\r\n\r\n//       dispatch(\r\n//         addMessage({\r\n//           name: generateRandomName(),\r\n//           message: makeRandomMessage(20) + \" ðŸš€\",\r\n//         })\r\n//       );\r\n//     }, 2000);\r\n\r\n//     return () => clearInterval(i);\r\n//   }, []);\r\n\r\n//   return (\r\n//     <>\r\n//       <div className=\"w-full h-[600px] ml-2 p-2 border border-black bg-slate-100 rounded-lg overflow-y-scroll flex flex-col-reverse\">\r\n//         <div>\r\n//           {\r\n//             // Disclaimer: Don't use indexes as keys\r\n//             chatMessages.map((c, i) => (\r\n//               <ChatMessage key={i} name={c.name} message={c.message} />\r\n//             ))\r\n//           }\r\n//         </div>\r\n//       </div>\r\n\r\n//       <form\r\n//         className=\"w-full p-2 ml-2 border border-black\"\r\n//         onSubmit={(e) => {\r\n//           e.preventDefault();\r\n\r\n//           dispatch(\r\n//             addMessage({\r\n//               name: \"Akshay Saini\",\r\n//               message: liveMessage,\r\n//             })\r\n//           );\r\n//           setLiveMessage(\"\");\r\n//         }}\r\n//       >\r\n//         <input\r\n//           className=\"px-2 w-96\"\r\n//           type=\"text\"\r\n//           value={liveMessage}\r\n//           onChange={(e) => {\r\n//             setLiveMessage(e.target.value);\r\n//           }}\r\n//         />\r\n//         <button className=\"px-2 mx-2 bg-green-100\">Send</button>\r\n//       </form>\r\n//     </>\r\n//   );\r\n// };\r\n// export default LiveChat;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,QAAQ,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAM/C,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE9B,MAAMC,YAAY,GAACR,WAAW,CAACS,KAAK,CAAC;EAEjC,MAAMC,QAAQ,GAACX,WAAW,CAAC,CAAC;EACvBF,SAAS,CAAC,MAAM;IAEd,MAAMc,CAAC,GAAGC,WAAW,CAAC,MAAM;MACzB;MACCC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;MAEzBJ,QAAQ,CAACT,UAAU,CAAC;QAACc,IAAI,EAAC,QAAQ;QAACC,OAAO,EAAC;MAAQ,CAAC,CAAC,CAAC;IAE1D,CAAC,EAAE,IAAI,CAAC;IAGN,OAAO,MAAKC,aAAa,CAACN,CAAC,CAAC;EACxC,CAAC,EAAC,EAAE,CAAC;EACJ,oBAGKR,OAAA,CAAAE,SAAA;IAAAa,QAAA,eACDf,OAAA;MAAKgB,SAAS,EAAC,+GAA+G;MAAAD,QAAA,eAGtHf,OAAA,CAACL,WAAW;QAACiB,IAAI,EAAC,UAAU;QAACC,OAAO,EAAC;MAAqC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEhF;EAAC,gBAGN,CAAC;AAEP,CAAC;;AAID;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAhB,EAAA,CAvGaD,QAAQ;EAAA,QAEFN,WAAW,EAEXD,WAAW;AAAA;AAAAyB,EAAA,GAJjBlB,QAAQ;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var nameList = [\"Time\", \"Past\", \"Future\", \"Dev\", \"Fly\", \"Flying\", \"Soar\", \"Soaring\", \"Power\", \"Falling\", \"Fall\", \"Jump\", \"Cliff\", \"Mountain\", \"Rend\", \"Red\", \"Blue\", \"Green\", \"Yellow\", \"Gold\", \"Demon\", \"Demonic\", \"Panda\", \"Cat\", \"Kitty\", \"Kitten\", \"Zero\", \"Memory\", \"Trooper\", \"XX\", \"Bandit\", \"Fear\", \"Light\", \"Glow\", \"Tread\", \"Deep\", \"Deeper\", \"Deepest\", \"Mine\", \"Your\", \"Worst\", \"Enemy\", \"Hostile\", \"Force\", \"Video\", \"Game\", \"Donkey\", \"Mule\", \"Colt\", \"Cult\", \"Cultist\", \"Magnum\", \"Gun\", \"Assault\", \"Recon\", \"Trap\", \"Trapper\", \"Redeem\", \"Code\", \"Script\", \"Writer\", \"Near\", \"Close\", \"Open\", \"Cube\", \"Circle\", \"Geo\", \"Genome\", \"Germ\", \"Spaz\", \"Shot\", \"Echo\", \"Beta\", \"Alpha\", \"Gamma\", \"Omega\", \"Seal\", \"Squid\", \"Money\", \"Cash\", \"Lord\", \"King\", \"Duke\", \"Rest\", \"Fire\", \"Flame\", \"Morrow\", \"Break\", \"Breaker\", \"Numb\", \"Ice\", \"Cold\", \"Rotten\", \"Sick\", \"Sickly\", \"Janitor\", \"Camel\", \"Rooster\", \"Sand\", \"Desert\", \"Dessert\", \"Hurdle\", \"Racer\", \"Eraser\", \"Erase\", \"Big\", \"Small\", \"Short\", \"Tall\", \"Sith\", \"Bounty\", \"Hunter\", \"Cracked\", \"Broken\", \"Sad\", \"Happy\", \"Joy\", \"Joyful\", \"Crimson\", \"Destiny\", \"Deceit\", \"Lies\", \"Lie\", \"Honest\", \"Destined\", \"Bloxxer\", \"Hawk\", \"Eagle\", \"Hawker\", \"Walker\", \"Zombie\", \"Sarge\", \"Capt\", \"Captain\", \"Punch\", \"One\", \"Two\", \"Uno\", \"Slice\", \"Slash\", \"Melt\", \"Melted\", \"Melting\", \"Fell\", \"Wolf\", \"Hound\", \"Legacy\", \"Sharp\", \"Dead\", \"Mew\", \"Chuckle\", \"Bubba\", \"Bubble\", \"Sandwich\", \"Smasher\", \"Extreme\", \"Multi\", \"Universe\", \"Ultimate\", \"Death\", \"Ready\", \"Monkey\", \"Elevator\", \"Wrench\", \"Grease\", \"Head\", \"Theme\", \"Grand\", \"Cool\", \"Kid\", \"Boy\", \"Girl\", \"Vortex\", \"Paradox\"];\nexport function generateRandomName() {\n  return nameList[Math.floor(Math.random() * nameList.length)];\n}\nexport function makeRandomMessage(length) {\n  let result = \"\";\n  const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  const charactersLength = characters.length;\n  let counter = 0;\n  while (counter < length) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    counter += 1;\n  }\n  return result;\n}\nexport const findPrime = num => {\n  let i,\n    primes = [2, 3],\n    n = 5;\n  const isPrime = n => {\n    let i = 1,\n      p = primes[i],\n      limit = Math.ceil(Math.sqrt(n));\n    while (p <= limit) {\n      if (n % p === 0) {\n        return false;\n      }\n      i += 1;\n      p = primes[i];\n    }\n    return true;\n  };\n  for (i = 2; i <= num; i += 1) {\n    while (!isPrime(n)) {\n      n += 2;\n    }\n    primes.push(n);\n    n += 2;\n  }\n  return primes[num - 1];\n};","map":{"version":3,"names":["nameList","generateRandomName","Math","floor","random","length","makeRandomMessage","result","characters","charactersLength","counter","charAt","findPrime","num","i","primes","n","isPrime","p","limit","ceil","sqrt","push"],"sources":["C:/Users/subhadip/OneDrive/Desktop/my-youtube/src/utils/helper.js"],"sourcesContent":["var nameList = [\r\n  \"Time\",\r\n  \"Past\",\r\n  \"Future\",\r\n  \"Dev\",\r\n  \"Fly\",\r\n  \"Flying\",\r\n  \"Soar\",\r\n  \"Soaring\",\r\n  \"Power\",\r\n  \"Falling\",\r\n  \"Fall\",\r\n  \"Jump\",\r\n  \"Cliff\",\r\n  \"Mountain\",\r\n  \"Rend\",\r\n  \"Red\",\r\n  \"Blue\",\r\n  \"Green\",\r\n  \"Yellow\",\r\n  \"Gold\",\r\n  \"Demon\",\r\n  \"Demonic\",\r\n  \"Panda\",\r\n  \"Cat\",\r\n  \"Kitty\",\r\n  \"Kitten\",\r\n  \"Zero\",\r\n  \"Memory\",\r\n  \"Trooper\",\r\n  \"XX\",\r\n  \"Bandit\",\r\n  \"Fear\",\r\n  \"Light\",\r\n  \"Glow\",\r\n  \"Tread\",\r\n  \"Deep\",\r\n  \"Deeper\",\r\n  \"Deepest\",\r\n  \"Mine\",\r\n  \"Your\",\r\n  \"Worst\",\r\n  \"Enemy\",\r\n  \"Hostile\",\r\n  \"Force\",\r\n  \"Video\",\r\n  \"Game\",\r\n  \"Donkey\",\r\n  \"Mule\",\r\n  \"Colt\",\r\n  \"Cult\",\r\n  \"Cultist\",\r\n  \"Magnum\",\r\n  \"Gun\",\r\n  \"Assault\",\r\n  \"Recon\",\r\n  \"Trap\",\r\n  \"Trapper\",\r\n  \"Redeem\",\r\n  \"Code\",\r\n  \"Script\",\r\n  \"Writer\",\r\n  \"Near\",\r\n  \"Close\",\r\n  \"Open\",\r\n  \"Cube\",\r\n  \"Circle\",\r\n  \"Geo\",\r\n  \"Genome\",\r\n  \"Germ\",\r\n  \"Spaz\",\r\n  \"Shot\",\r\n  \"Echo\",\r\n  \"Beta\",\r\n  \"Alpha\",\r\n  \"Gamma\",\r\n  \"Omega\",\r\n  \"Seal\",\r\n  \"Squid\",\r\n  \"Money\",\r\n  \"Cash\",\r\n  \"Lord\",\r\n  \"King\",\r\n  \"Duke\",\r\n  \"Rest\",\r\n  \"Fire\",\r\n  \"Flame\",\r\n  \"Morrow\",\r\n  \"Break\",\r\n  \"Breaker\",\r\n  \"Numb\",\r\n  \"Ice\",\r\n  \"Cold\",\r\n  \"Rotten\",\r\n  \"Sick\",\r\n  \"Sickly\",\r\n  \"Janitor\",\r\n  \"Camel\",\r\n  \"Rooster\",\r\n  \"Sand\",\r\n  \"Desert\",\r\n  \"Dessert\",\r\n  \"Hurdle\",\r\n  \"Racer\",\r\n  \"Eraser\",\r\n  \"Erase\",\r\n  \"Big\",\r\n  \"Small\",\r\n  \"Short\",\r\n  \"Tall\",\r\n  \"Sith\",\r\n  \"Bounty\",\r\n  \"Hunter\",\r\n  \"Cracked\",\r\n  \"Broken\",\r\n  \"Sad\",\r\n  \"Happy\",\r\n  \"Joy\",\r\n  \"Joyful\",\r\n  \"Crimson\",\r\n  \"Destiny\",\r\n  \"Deceit\",\r\n  \"Lies\",\r\n  \"Lie\",\r\n  \"Honest\",\r\n  \"Destined\",\r\n  \"Bloxxer\",\r\n  \"Hawk\",\r\n  \"Eagle\",\r\n  \"Hawker\",\r\n  \"Walker\",\r\n  \"Zombie\",\r\n  \"Sarge\",\r\n  \"Capt\",\r\n  \"Captain\",\r\n  \"Punch\",\r\n  \"One\",\r\n  \"Two\",\r\n  \"Uno\",\r\n  \"Slice\",\r\n  \"Slash\",\r\n  \"Melt\",\r\n  \"Melted\",\r\n  \"Melting\",\r\n  \"Fell\",\r\n  \"Wolf\",\r\n  \"Hound\",\r\n  \"Legacy\",\r\n  \"Sharp\",\r\n  \"Dead\",\r\n  \"Mew\",\r\n  \"Chuckle\",\r\n  \"Bubba\",\r\n  \"Bubble\",\r\n  \"Sandwich\",\r\n  \"Smasher\",\r\n  \"Extreme\",\r\n  \"Multi\",\r\n  \"Universe\",\r\n  \"Ultimate\",\r\n  \"Death\",\r\n  \"Ready\",\r\n  \"Monkey\",\r\n  \"Elevator\",\r\n  \"Wrench\",\r\n  \"Grease\",\r\n  \"Head\",\r\n  \"Theme\",\r\n  \"Grand\",\r\n  \"Cool\",\r\n  \"Kid\",\r\n  \"Boy\",\r\n  \"Girl\",\r\n  \"Vortex\",\r\n  \"Paradox\",\r\n];\r\n\r\nexport function generateRandomName() {\r\n  return nameList[Math.floor(Math.random() * nameList.length)];\r\n}\r\n\r\nexport function makeRandomMessage(length) {\r\n  let result = \"\";\r\n  const characters =\r\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n  const charactersLength = characters.length;\r\n  let counter = 0;\r\n  while (counter < length) {\r\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    counter += 1;\r\n  }\r\n  return result;\r\n}\r\n\r\nexport const findPrime = (num) => {\r\n  let i,\r\n    primes = [2, 3],\r\n    n = 5;\r\n  const isPrime = (n) => {\r\n    let i = 1,\r\n      p = primes[i],\r\n      limit = Math.ceil(Math.sqrt(n));\r\n    while (p <= limit) {\r\n      if (n % p === 0) {\r\n        return false;\r\n      }\r\n      i += 1;\r\n      p = primes[i];\r\n    }\r\n    return true;\r\n  };\r\n  for (i = 2; i <= num; i += 1) {\r\n    while (!isPrime(n)) {\r\n      n += 2;\r\n    }\r\n    primes.push(n);\r\n    n += 2;\r\n  }\r\n  return primes[num - 1];\r\n};\r\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAG,CACb,MAAM,EACN,MAAM,EACN,QAAQ,EACR,KAAK,EACL,KAAK,EACL,QAAQ,EACR,MAAM,EACN,SAAS,EACT,OAAO,EACP,SAAS,EACT,MAAM,EACN,MAAM,EACN,OAAO,EACP,UAAU,EACV,MAAM,EACN,KAAK,EACL,MAAM,EACN,OAAO,EACP,QAAQ,EACR,MAAM,EACN,OAAO,EACP,SAAS,EACT,OAAO,EACP,KAAK,EACL,OAAO,EACP,QAAQ,EACR,MAAM,EACN,QAAQ,EACR,SAAS,EACT,IAAI,EACJ,QAAQ,EACR,MAAM,EACN,OAAO,EACP,MAAM,EACN,OAAO,EACP,MAAM,EACN,QAAQ,EACR,SAAS,EACT,MAAM,EACN,MAAM,EACN,OAAO,EACP,OAAO,EACP,SAAS,EACT,OAAO,EACP,OAAO,EACP,MAAM,EACN,QAAQ,EACR,MAAM,EACN,MAAM,EACN,MAAM,EACN,SAAS,EACT,QAAQ,EACR,KAAK,EACL,SAAS,EACT,OAAO,EACP,MAAM,EACN,SAAS,EACT,QAAQ,EACR,MAAM,EACN,QAAQ,EACR,QAAQ,EACR,MAAM,EACN,OAAO,EACP,MAAM,EACN,MAAM,EACN,QAAQ,EACR,KAAK,EACL,QAAQ,EACR,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,OAAO,EACP,OAAO,EACP,OAAO,EACP,MAAM,EACN,OAAO,EACP,OAAO,EACP,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,OAAO,EACP,QAAQ,EACR,OAAO,EACP,SAAS,EACT,MAAM,EACN,KAAK,EACL,MAAM,EACN,QAAQ,EACR,MAAM,EACN,QAAQ,EACR,SAAS,EACT,OAAO,EACP,SAAS,EACT,MAAM,EACN,QAAQ,EACR,SAAS,EACT,QAAQ,EACR,OAAO,EACP,QAAQ,EACR,OAAO,EACP,KAAK,EACL,OAAO,EACP,OAAO,EACP,MAAM,EACN,MAAM,EACN,QAAQ,EACR,QAAQ,EACR,SAAS,EACT,QAAQ,EACR,KAAK,EACL,OAAO,EACP,KAAK,EACL,QAAQ,EACR,SAAS,EACT,SAAS,EACT,QAAQ,EACR,MAAM,EACN,KAAK,EACL,QAAQ,EACR,UAAU,EACV,SAAS,EACT,MAAM,EACN,OAAO,EACP,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,OAAO,EACP,MAAM,EACN,SAAS,EACT,OAAO,EACP,KAAK,EACL,KAAK,EACL,KAAK,EACL,OAAO,EACP,OAAO,EACP,MAAM,EACN,QAAQ,EACR,SAAS,EACT,MAAM,EACN,MAAM,EACN,OAAO,EACP,QAAQ,EACR,OAAO,EACP,MAAM,EACN,KAAK,EACL,SAAS,EACT,OAAO,EACP,QAAQ,EACR,UAAU,EACV,SAAS,EACT,SAAS,EACT,OAAO,EACP,UAAU,EACV,UAAU,EACV,OAAO,EACP,OAAO,EACP,QAAQ,EACR,UAAU,EACV,QAAQ,EACR,QAAQ,EACR,MAAM,EACN,OAAO,EACP,OAAO,EACP,MAAM,EACN,KAAK,EACL,KAAK,EACL,MAAM,EACN,QAAQ,EACR,SAAS,CACV;AAED,OAAO,SAASC,kBAAkBA,CAAA,EAAG;EACnC,OAAOD,QAAQ,CAACE,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGJ,QAAQ,CAACK,MAAM,CAAC,CAAC;AAC9D;AAEA,OAAO,SAASC,iBAAiBA,CAACD,MAAM,EAAE;EACxC,IAAIE,MAAM,GAAG,EAAE;EACf,MAAMC,UAAU,GACd,gEAAgE;EAClE,MAAMC,gBAAgB,GAAGD,UAAU,CAACH,MAAM;EAC1C,IAAIK,OAAO,GAAG,CAAC;EACf,OAAOA,OAAO,GAAGL,MAAM,EAAE;IACvBE,MAAM,IAAIC,UAAU,CAACG,MAAM,CAACT,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGK,gBAAgB,CAAC,CAAC;IACzEC,OAAO,IAAI,CAAC;EACd;EACA,OAAOH,MAAM;AACf;AAEA,OAAO,MAAMK,SAAS,GAAIC,GAAG,IAAK;EAChC,IAAIC,CAAC;IACHC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IACfC,CAAC,GAAG,CAAC;EACP,MAAMC,OAAO,GAAID,CAAC,IAAK;IACrB,IAAIF,CAAC,GAAG,CAAC;MACPI,CAAC,GAAGH,MAAM,CAACD,CAAC,CAAC;MACbK,KAAK,GAAGjB,IAAI,CAACkB,IAAI,CAAClB,IAAI,CAACmB,IAAI,CAACL,CAAC,CAAC,CAAC;IACjC,OAAOE,CAAC,IAAIC,KAAK,EAAE;MACjB,IAAIH,CAAC,GAAGE,CAAC,KAAK,CAAC,EAAE;QACf,OAAO,KAAK;MACd;MACAJ,CAAC,IAAI,CAAC;MACNI,CAAC,GAAGH,MAAM,CAACD,CAAC,CAAC;IACf;IACA,OAAO,IAAI;EACb,CAAC;EACD,KAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAID,GAAG,EAAEC,CAAC,IAAI,CAAC,EAAE;IAC5B,OAAO,CAACG,OAAO,CAACD,CAAC,CAAC,EAAE;MAClBA,CAAC,IAAI,CAAC;IACR;IACAD,MAAM,CAACO,IAAI,CAACN,CAAC,CAAC;IACdA,CAAC,IAAI,CAAC;EACR;EACA,OAAOD,MAAM,CAACF,GAAG,GAAG,CAAC,CAAC;AACxB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
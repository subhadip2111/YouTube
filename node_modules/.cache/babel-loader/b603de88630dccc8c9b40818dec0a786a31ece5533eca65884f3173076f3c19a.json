{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\subhadip\\\\OneDrive\\\\Desktop\\\\my-youtube\\\\src\\\\component\\\\CommentsContainner.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst commentsData = [{\n  name: \"Akshay Saini\",\n  text: \"Lorem ipsum dolor sit amet, consectetur adip\",\n  replies: []\n}, {\n  name: \"Akshay Saini\",\n  text: \"Lorem ipsum dolor sit amet, consectetur adip\",\n  replies: [{\n    name: \"Akshay Saini\",\n    text: \"Lorem ipsum dolor sit amet, consectetur adip\",\n    replies: []\n  }, {\n    name: \"Akshay Saini\",\n    text: \"Lorem ipsum dolor sit amet, consectetur adip\",\n    replies: [{\n      name: \"Akshay Saini\",\n      text: \"Lorem ipsum dolor sit amet, consectetur adip\",\n      replies: [{\n        name: \"Akshay Saini\",\n        text: \"Lorem ipsum dolor sit amet, consectetur adip\",\n        replies: [{\n          name: \"Akshay Saini\",\n          text: \"Lorem ipsum dolor sit amet, consectetur adip\",\n          replies: [{\n            name: \"Akshay Saini\",\n            text: \"Lorem ipsum dolor sit amet, consectetur adip\",\n            replies: []\n          }]\n        }, {\n          name: \"Akshay Saini\",\n          text: \"Lorem ipsum dolor sit amet, consectetur adip\",\n          replies: []\n        }]\n      }]\n    }]\n  }]\n}, {\n  name: \"Akshay Saini\",\n  text: \"Lorem ipsum dolor sit amet, consectetur adip\",\n  replies: []\n}, {\n  name: \"Akshay Saini\",\n  text: \"Lorem ipsum dolor sit amet, consectetur adip\",\n  replies: []\n}, {\n  name: \"Akshay Saini\",\n  text: \"Lorem ipsum dolor sit amet, consectetur adip\",\n  replies: []\n}, {\n  name: \"Akshay Saini\",\n  text: \"Lorem ipsum dolor sit amet, consectetur adip\",\n  replies: []\n}];\n\n// const CommentsContainer = ({ videoId, apiKey }) => {\n//   const [comments, setComments] = useState([]);\n\n//   useEffect(() => {\n//     const apiUrl = `https://www.googleapis.com/youtube/v3/commentThreads?part=snippet&videoId=${videoId}&key=${apiKey}`;\n\n//     axios.get(apiUrl)\n//       .then(response => {\n//         const fetchedComments = response.data.items.map(item => ({\n//           name: item.snippet.topLevelComment.snippet.authorDisplayName,\n//           text: item.snippet.topLevelComment.snippet.textDisplay,\n//           replies: [],\n//         }));\n//         setComments(fetchedComments);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching comments:', error);\n//       });\n//   }, [videoId, apiKey]);\n\n//   return (\n//     <div className=\"mt-4\">\n//       <h3 className=\"text-lg font-semibold\">Comments:</h3>\n//       <CommentsList comments={comments} />\n//     </div>\n//   );\n// };\n\nconst Comment = ({\n  data\n}) => {\n  const {\n    name,\n    text,\n    replies\n  } = data;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex shadow-sm bg-gray-100 p-2 rounded-lg my-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"w-12 h-12\",\n      alt: \"user\",\n      src: \"https://www.iconpacks.net/icons/2/free-user-icon-3296-thumb.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-bold\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_c = Comment;\nconst CommentsList = ({\n  comments\n}) => {\n  // Disclaimer: Don't use indexes as keys\n  return comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Comment, {\n      data: comment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pl-5 border border-l-black ml-5\",\n      children: /*#__PURE__*/_jsxDEV(CommentsList, {\n        comments: comment.replies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this));\n};\n_c2 = CommentsList;\nconst CommentsContainer = ({\n  videoId,\n  apiKey\n}) => {\n  _s();\n  const [comments, setComments] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"m-5 p-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold\",\n      children: \"Comments: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommentsList, {\n      comments: commentsData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentsContainer, \"RHrI29Yaf4wTXaDPqg0VDGN+Yyo=\");\n_c3 = CommentsContainer;\nexport default CommentsContainer;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Comment\");\n$RefreshReg$(_c2, \"CommentsList\");\n$RefreshReg$(_c3, \"CommentsContainer\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","commentsData","name","text","replies","Comment","data","className","children","alt","src","fileName","_jsxFileName","lineNumber","columnNumber","_c","CommentsList","comments","map","comment","index","_c2","CommentsContainer","videoId","apiKey","_s","setComments","_c3","$RefreshReg$"],"sources":["C:/Users/subhadip/OneDrive/Desktop/my-youtube/src/component/CommentsContainner.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst commentsData = [\r\n  {\r\n    name: \"Akshay Saini\",\r\n    text: \"Lorem ipsum dolor sit amet, consectetur adip\",\r\n    replies: [],\r\n  },\r\n  {\r\n    name: \"Akshay Saini\",\r\n    text: \"Lorem ipsum dolor sit amet, consectetur adip\",\r\n    replies: [\r\n      {\r\n        name: \"Akshay Saini\",\r\n        text: \"Lorem ipsum dolor sit amet, consectetur adip\",\r\n        replies: [],\r\n      },\r\n      {\r\n        name: \"Akshay Saini\",\r\n        text: \"Lorem ipsum dolor sit amet, consectetur adip\",\r\n        replies: [\r\n          {\r\n            name: \"Akshay Saini\",\r\n            text: \"Lorem ipsum dolor sit amet, consectetur adip\",\r\n            replies: [\r\n              {\r\n                name: \"Akshay Saini\",\r\n                text: \"Lorem ipsum dolor sit amet, consectetur adip\",\r\n                replies: [\r\n                  {\r\n                    name: \"Akshay Saini\",\r\n                    text: \"Lorem ipsum dolor sit amet, consectetur adip\",\r\n                    replies: [\r\n                      {\r\n                        name: \"Akshay Saini\",\r\n                        text: \"Lorem ipsum dolor sit amet, consectetur adip\",\r\n                        replies: [],\r\n                      },\r\n                    ],\r\n                  },\r\n                  {\r\n                    name: \"Akshay Saini\",\r\n                    text: \"Lorem ipsum dolor sit amet, consectetur adip\",\r\n                    replies: [],\r\n                  },\r\n                ],\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    name: \"Akshay Saini\",\r\n    text: \"Lorem ipsum dolor sit amet, consectetur adip\",\r\n    replies: [],\r\n  },\r\n  {\r\n    name: \"Akshay Saini\",\r\n    text: \"Lorem ipsum dolor sit amet, consectetur adip\",\r\n    replies: [],\r\n  },\r\n  {\r\n    name: \"Akshay Saini\",\r\n    text: \"Lorem ipsum dolor sit amet, consectetur adip\",\r\n    replies: [],\r\n  },\r\n  {\r\n    name: \"Akshay Saini\",\r\n    text: \"Lorem ipsum dolor sit amet, consectetur adip\",\r\n    replies: [],\r\n  },\r\n];\r\n\r\n\r\n// const CommentsContainer = ({ videoId, apiKey }) => {\r\n//   const [comments, setComments] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     const apiUrl = `https://www.googleapis.com/youtube/v3/commentThreads?part=snippet&videoId=${videoId}&key=${apiKey}`;\r\n\r\n//     axios.get(apiUrl)\r\n//       .then(response => {\r\n//         const fetchedComments = response.data.items.map(item => ({\r\n//           name: item.snippet.topLevelComment.snippet.authorDisplayName,\r\n//           text: item.snippet.topLevelComment.snippet.textDisplay,\r\n//           replies: [],\r\n//         }));\r\n//         setComments(fetchedComments);\r\n//       })\r\n//       .catch(error => {\r\n//         console.error('Error fetching comments:', error);\r\n//       });\r\n//   }, [videoId, apiKey]);\r\n\r\n//   return (\r\n//     <div className=\"mt-4\">\r\n//       <h3 className=\"text-lg font-semibold\">Comments:</h3>\r\n//       <CommentsList comments={comments} />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Comment = ({ data }) => {\r\n  const { name, text, replies } = data;\r\n  return (\r\n    <div className=\"flex shadow-sm bg-gray-100 p-2 rounded-lg my-2\">\r\n      <img\r\n        className=\"w-12 h-12\"\r\n        alt=\"user\"\r\n        src=\"https://www.iconpacks.net/icons/2/free-user-icon-3296-thumb.png\"\r\n      />\r\n      <div className=\"px-3\">\r\n        <p className=\"font-bold\">{name}</p>\r\n        <p>{text}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CommentsList = ({ comments }) => {\r\n  // Disclaimer: Don't use indexes as keys\r\n  return comments.map((comment, index) => (\r\n    <div key={index}>\r\n      <Comment data={comment} />\r\n      <div className=\"pl-5 border border-l-black ml-5\">\r\n        <CommentsList comments={comment.replies} />\r\n      </div>\r\n    </div>\r\n  ));\r\n};\r\n\r\nconst CommentsContainer = ({ videoId, apiKey }) => {\r\n  const [comments, setComments] = useState([]);\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n  return (\r\n    <div className=\"m-5 p-2\">\r\n      <h1 className=\"text-2xl font-bold\">Comments: </h1>\r\n      <CommentsList comments={commentsData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentsContainer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}